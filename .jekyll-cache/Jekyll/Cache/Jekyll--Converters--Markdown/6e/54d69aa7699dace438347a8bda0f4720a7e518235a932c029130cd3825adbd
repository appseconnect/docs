I"È<p>Users/Implementers of APPSeCONNECT requires to edit and modify workflows frequently as per the business 
requirement. Advance Workflows is enabled with the feature of saving revised editions which means 
users/implementers of APPSeCONNECT can now save a revised version of the created workflow and modify 
changes to the existing workflow with respect to the business process.</p>

<h2 id="scenario-briefing">Scenario Briefing</h2>

<p>As a User/Implementer, I want to commit changes to the designed workflow, and it has been observed that 
designed workflow doesnot fulfils the business process, but I want to save the designed workflow 
(version wise) before editing the workflow so that whenever needed I can restore the previous version 
to for revise purpose.</p>

<p>Saving Revisions is now possible on APPSeCONNECT and user can save multiple version of a workflow for 
revision.</p>

<h2 id="prerequisites-of-saving--restoring-revisions">Prerequisites of Saving &amp; Restoring Revisions</h2>

<ul>
  <li>You need a valid credentials to the APPSeCONNECT portal.</li>
  <li>You need to have a saved workflow.</li>
</ul>

<h2 id="steps-for-saving-workflows-for-revision">Steps for Saving workflows for Revision</h2>

<ol>
  <li>Login to APPSeCONNECT portal and navigate to Advance Workflow  Section. The Advance Workflow Listing 
page opens.</li>
  <li>Create a Workflow or open an existing workflow. The page for designing and executing advance workflow opens.<br />
<img src="/staticfiles/advance-workflow/media/restoring-saving-workflow1.png" alt="restoring-saving-workflow1" /></li>
  <li>In the Workflow Header Panel, Click SAVE REVISION, for saving a revised version of the existing workflow.<br />
<img src="/staticfiles/advance-workflow/media/restoring-saving-workflow2.png" alt="restoring-saving-workflow2" /><br />
<strong>Note: The <code class="language-plaintext highlighter-rouge">SAVE REVISION</code> button appears only after saving a created Workflow.</strong></li>
  <li>While saving a revision, user needs to provide a comment for distinguishing the workflow while 
restoring. Therefore, on clicking the SAVE REVISION button, user gets a window for adding COMMENT 
to the workflow that is being saved for later use.  <br />
<img src="/staticfiles/advance-workflow/media/restoring-saving-workflow3.png" alt="restoring-saving-workflow3" /><br />
<strong>Protip:</strong>  It is recommended to provide the comment as per the business process or workflow design. 
For Ex: <code class="language-plaintext highlighter-rouge">Workflow for adding Sales Order using Halt &amp; Resume</code>, <code class="language-plaintext highlighter-rouge">Workflow for adding Business Partner using Delay Node</code>.</li>
  <li>Clicking  SAVE button, user gets confirmation message for the workflow being saved for revision.
<img src="/staticfiles/advance-workflow/media/restoring-saving-workflow4.png" alt="restoring-saving-workflow4" /></li>
  <li>Once the workflow is saved, user can click on the Revision History button. The user will get a sliding window 
with the view of all the revision workflows.<br />
<img src="/staticfiles/advance-workflow/media/restoring-saving-workflow5.png" alt="restoring-saving-workflow5" /></li>
  <li>The Revision history window display the detail of the workflow that was first created. The details that will be displayed are:
    <ul>
      <li>Created By: Will display the name of the user, who created the original Workflow.</li>
      <li>Created Date: Will display the date and time, when the workflow was first created.</li>
    </ul>
  </li>
  <li>Users/Implementers of APPSeCONNECT will also get the privilege to filter workflow based upon the revision list. User needs to 
click on the Filter icon to enable the Search option.
<img src="/staticfiles/advance-workflow/media/restoring-saving-workflow6.png" alt="restoring-saving-workflow6" /></li>
  <li>The revision list will have all the workflows that were saved for revisions. The table will have the columns Version, Modified Date, Comment &amp; Action.</li>
  <li>Hovering on each Revision Workflows, button with three horizontal dots will appear which will enable the user to provide actions to the workflows. The actions that can be implemented are:
    <ul>
      <li>Restore</li>
      <li>Delete</li>
    </ul>
  </li>
  <li>Users/Implementers will be able to edit the Revision Workflows by clicking on the Restore Button for that workflow.<br />
<strong>Note:</strong>
    <ul>
      <li>Any changes made on a restored workflow, on saving its revision, a new entry will be created in the Revision History. No entries would be deleted, if a revised workflow is saved for another revision.</li>
      <li>On deleting a revision, every detail of that revision will be erased. User cannot restore the revision after deleting it from the Revision History.</li>
      <li>Deploying of workflow has no dependability on revision of the workflow, which means restoring a workflow from revision will not save any deployment history.</li>
    </ul>
  </li>
</ol>

:ET