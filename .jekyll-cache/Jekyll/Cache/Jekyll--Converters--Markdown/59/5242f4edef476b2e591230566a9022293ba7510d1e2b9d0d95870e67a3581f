I"&&<h2 id="process-to-configure-oauth20-rest-adapter---on-premise">Process to Configure OAuth2.0 Rest Adapter - On Premise</h2>

<p>To configure the OAuth2.0 Authentication type for Rest Adapter follow the steps given below:</p>

<p>1) Login to APPSeCONNECT Portal
2) <a href="/configuring%20appseconnect/configurations/#b-technology-app-creation">Create Technology Application</a> using rest adapter. Choose <code class="language-plaintext highlighter-rouge">REST</code> option while creating technology application for REST based protocol.</p>

<p class="notice--info"><strong>Protip:</strong> You can use either both technology app or one tech app and one prepackaged app while creating a connection. 
 Also you need to click <code class="language-plaintext highlighter-rouge">Configure Connector</code> button for creating connection as your desired connection is made of custom application.</p>

<p class="notice--info"><strong>Protip:</strong> Here you will get a connection for lightspeed (which supports OAUTH 2.0 for authentication) where you can view the validation
details as required</p>

<p>3) Once the connection is created, Login to the agent.</p>

<p>4) Go to the App Configuration page on your OP Agent, and Click on Update Configuration.<br />
You can now view the REST based chosen applications in your agent. 
<a href="/processflow/deploying-and-executing-processfloww/">Click Here</a>, for deploying applications from Process Flow.</p>

<p>5) On clicking the <code class="language-plaintext highlighter-rouge">+</code> button beside your REST based application, the credential window for REST Adapter opens.</p>

<p>6) Provide the BASE URL of your application and select the <strong>Authentication Type</strong> as <strong>Oauth2.0</strong>. The adapter configurations will get downloaded automatically (within a time span), and then you can process with the credential authorization.</p>

<p><img src="\staticfiles\connectors\media\technology-connector\restoauth2_1.PNG" alt="restoauth2_1" /></p>

<p>7) You can now provide the credentials for your applications. The following fields are required for validating the your credentials.
The Authentication fields for OAUTH 2.0 are:</p>
<ul>
  <li>Client ID – This is generated when the client logs into the Application.</li>
  <li>Header Prefix - This field authenticates your token provided for this validation process. By default, <strong>BEARER</strong> will be selected.</li>
  <li>Client Secret - This field is also generated by the REST supported Application.</li>
  <li>Call Back URL - This is the secondary URL required for data restoration.</li>
  <li>Authentication URL – This URL is generated along with the Client ID and Client Secret in the REST application itself.</li>
  <li>Access Token URL</li>
  <li>Scope (Optional)</li>
  <li>Access Type (optional)</li>
  <li>Grant – Authorization Code</li>
</ul>

<p><img src="\staticfiles\connectors\media\technology-connector\restoauth2_2.PNG" alt="restoauth2_2" /></p>

<p>8) Provide your credentials as per the fields given.</p>

<p><img src="\staticfiles\connectors\media\technology-connector\restoauth2_3.PNG" alt="restoauth2_3" /></p>

<p><img src="\staticfiles\connectors\media\technology-connector\restoauth2_4.PNG" alt="restoauth2_4" /></p>

<p class="notice--info"><strong>Protip:</strong> By default, <strong>SCOPE</strong> , <strong>Access Type</strong> , <strong>STATE</strong> is an optional field in AEC Agent, but for some applications providing the optional field can be mandatory, 
you need to provide the SCOPE for those applications</p>

<p>Here, we need to generate token which can be done by clicking <code class="language-plaintext highlighter-rouge">GENERATE TOKEN</code> button.</p>

<p><img src="\staticfiles\connectors\media\technology-connector\restoauth2_5.PNG" alt="restoauth2_5" /></p>

<ul>
  <li>The above validation process is done taking  the credentials of ZOHOBOOKS.</li>
  <li>By default the field <strong>Header Prefix</strong> remains as <strong>BEARER</strong>. If your application supports a different Header Prefix, you need to provide your application specific header prefix. For all ZOHO applications, Header Prefix should be <strong>Zoho-oauthtoken</strong>. You need to replace <code class="language-plaintext highlighter-rouge">BEARER</code> with <code class="language-plaintext highlighter-rouge">Zoho-oauthtoken</code>.</li>
  <li>On clicking the <strong>GENERATE TOKEN</strong> button, it will redirect you to the Application Specific Page on your custom browser, where you need to login 
with the credential that you have provided during the Account Creation.</li>
  <li>Make sure that you do not close the blank page. Once done, click on the <strong>VALIDATE</strong> on your OP agent.</li>
  <li>Select the Content-Type as JSON. Click on Validate and SAVE.</li>
</ul>

<p class="notice--info"><strong>Protip:</strong>  Similarly, for the other Authorization Type for REST APPLICATION as well, we have similar process of integration</p>

<h2 id="process-to-configure-oauth20-in-rest-adapter---cloud">Process to Configure OAuth2.0 in Rest Adapter - Cloud</h2>

<p>Follow the steps given below to configure Oauth 2.0 in Generic Rest Adapter in Cloud Environment.</p>

<ol>
  <li>Login to APPSeCONNECT Portal</li>
  <li><a href="/configuring%20appseconnect/configurations/#b-technology-app-creation">Create Technology Application</a> using rest adapter. Choose <code class="language-plaintext highlighter-rouge">REST</code> option while creating technology application for REST based protocol.</li>
</ol>

<p class="notice--info"><strong>Protip:</strong> You can use either both technology app or one tech app and one prepackaged app while creating a connection. 
 Also you need to click <code class="language-plaintext highlighter-rouge">Configure Connector</code> button for creating connection as your desired connection is made of custom application.</p>

<p>Go to the <code class="language-plaintext highlighter-rouge">App section</code> of the portal  and you can view the selected application as shown below.
<img src="/staticfiles/connectors/media/technology-connector/Rest-OAuth2-CloudCredential.png" alt="Rest-OAuth2-CloudCredential" />    <br />
 Click Credential button for the choosen application and the following screen appears
<img src="/staticfiles/connectors/media/technology-connector/Rest-OAuth2-CloudCredential2.png" alt="Rest-OAuth2-CloudCredential2" /></p>

<p><strong>Note:</strong> If you don’t have  a cloud environment created on your organisation, You will be getting this message <strong><code class="language-plaintext highlighter-rouge">Please create an cloud environment to Grant the credentials</code></strong> on clicking the <strong>Add new Credential</strong> button. 
To know more about creating Cloud Environment, <a href="/deployment/Environment-Management/#adding-cloud-environment">Click Here</a></p>

<p><img src="/staticfiles/connectors/media/technology-connector/Rest-OAuth2-CloudCredential3.png" alt="Rest-OAuth2-CloudCredential3" />    <br />
Here you need to enter the following details as shown:</p>
<ul>
  <li>Credential Name: Enter the Credential Name.</li>
  <li>URL: This is the base URL, input the URL</li>
  <li>Key &amp; Value: This is the content type section that includes the file format types like XML, JSON.
Input the value from the drop down list of content type field.</li>
  <li>Authorization: Select OAuth 2.0 from the drop down list.</li>
  <li>Client Id: This is generated when the client logs into the Application. Input the Client Id.</li>
  <li>Auth URL: This URL is generated along with the Client ID and Client Secret in the REST application itself. Input the Auth URL</li>
  <li>Callback URL: This is the secondary URL required for data restoration. This url will be <code class="language-plaintext highlighter-rouge">https://portal.appseconnect.com/Dashboard</code> .</li>
</ul>

<p><strong>NOTE: Use this url in the callback/redirect url field while generating client id and 
client secret for the new app</strong></p>

<ul>
  <li>Access Token URL: An Access Token is a credential that can be used by an application to access an API. They inform the API that the 
bearer of the token has been authorized to access the API and perform specific actions specified by the scope that has been granted.</li>
  <li>Client Secret: This field is also generated by the REST supported Application.</li>
  <li>Scope (Optional)</li>
  <li>Grant Type: This is the Authorization Code</li>
  <li>Access Type (optional)</li>
</ul>

<p>Click Grant button, to authorize the application.</p>

<p>You will get success message for Oauth2.0 saying <strong>Tokens Generated</strong> when both <code class="language-plaintext highlighter-rouge">Access and Refresh Tokens</code> are generated.</p>

<p>Now this will take you to the login page of the application.</p>

<p>Provide the login credentials. This will thereby allow you to access the application with a pop up message as shown below<br />
<img src="/staticfiles/connectors/media/technology-connector/Oauth2-Rest-access_authorization.png" alt="Oauth2-Rest-access_authorization" /></p>

<p>Click Save button, to Save the Credential.</p>

<p>If the Authorization fails, you will get a failure message saying <strong>Failed to create tokens</strong></p>

<p class="notice--info"><strong>Protip:</strong>  In Rest Based Integration for Cloud Connection Use Portal URL as Call back URL</p>

<p class="notice--info"><strong>Protip:</strong> Note: By default, organisations will only be On-Premise enabled. Users of the organisation needs to  contact the APPSeCONNECT team for enabling cloud hosted organisation so that users can 
integrate cloud application using the cloud agent.</p>
:ET